

* short term
** TODO add tooltip component-ctor fn
   (tooltip "string") for (Tooltip. (text-area "string"))
   otherwise just (tooltip (component)) (Tooltip. (component))
** TODO refactor editor renderer API/implementation
   - do use pivot events and pivot datastructures this time?
     (subclass pivot datastructures and editors/renderes so that they implement clojure IFaces)
   - expose it as an API so that users can define their own editors/renders for _all_ components (treeviews, listviews, tableviews ...)
** TODO examine pivot data-binding limitiations (no dashes in names)
   and either bypass those limitations (by munging keywords)
   or document it in the clj-pivot API
** DONE update to pivot 1.4, refactor content, editors and renderes to use deftype
   CLOSED: [2010-02-08 Mo 14:37]
** DONE remove awkward intertwined dependencies from components & listeners
   CLOSED: [2010-02-08 Mo 14:37]
** DONE use leiningen & clojars for distribution
   CLOSED: [2010-04-19 Mo 21:30]
** DONE macros around find-component, make more terse,
   CLOSED: [2010-01-25 Mo 10:40]
    user-keys property to component, for tagging components
** DONE generalize some listeners (like `user-changed-something-listener' )
   CLOSED: [2010-01-25 Mo 10:40]

** DONE remove hoeck.pivot.relations package
   CLOSED: [2010-02-08 Mo 14:41]
** DONE add epl licence headers
   CLOSED: [2010-02-09 Di 00:43]
** TODO refactor component-inspector
** DONE add examples
   CLOSED: [2010-02-08 Mo 22:16]
   partially done, need a *real* example app
** DONE add README
   CLOSED: [2010-02-09 Di 00:43]
** TODO add jnlp support
** TODO generate a stripped clj-pivot.jar
   remove unnecessary classfiles: examples
   write an ant-script to do so
* long term
** TODO add neo4j support
   displaying/modifying: graphs, trees and tabular/relational data
   
** TODO find out how to open more than one Frame
** TODO implement basic reactive programming with limited scope for a few rows/forms/components
  (see http://bitbucket.org/ksojat/neman/src/tip/neman/cells/)
** TODO graph rendering with auto layout
** TODO generate the components namespace solely from java-reflection???
** TODO make the clojure-pivot-interface extendable (define property-maps for custom components)

* applets
  keytool - zertifikate erstellen
  policytool - policy-dateien erstellen
** jarsigner - jars signieren oder überprüfen
   jarsigner clj-pivot.jar selfsigned
   selfsigned .. alias, eingegeben bei keytool
** appletviewer
   appletviewer -J-Djava.security.policy=all.jp example.html
** pack200
   beste kompr. + strip debug-info
   pack200 -E9 -G clj-pivot.jar.pack.gz clj-pivot.jar
   anschliessend im <applet>-tag ganz normal auf clj-pivot.jar verweisen
   und zusätzlich das -Djnlp.packEnabled=true jvm-arg-flag setzen







